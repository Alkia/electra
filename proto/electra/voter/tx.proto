syntax = "proto3";
package electra.voter;

import "electra/voter/poll.proto";
import "electra/voter/vote.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "electra/x/voter/types";

// Msg defines the Msg service.
service Msg {
    rpc CreatePoll(MsgCreatePoll) returns (MsgCreatePollResponse);
  rpc UpdatePoll(MsgUpdatePoll) returns (MsgUpdatePollResponse);
  rpc DeletePoll(MsgDeletePoll) returns (MsgDeletePollResponse);
rpc CreateVote(MsgCreateVote) returns (MsgCreateVoteResponse);
  rpc UpdateVote(MsgUpdateVote) returns (MsgUpdateVoteResponse);
  rpc DeleteVote(MsgDeleteVote) returns (MsgDeleteVoteResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreatePoll {
  string creator = 1;
  string title = 2;
  repeated string options = 3;
}

message MsgCreatePollResponse {
  uint64 id = 1;
}

message MsgUpdatePoll {
  string creator = 1;
  uint64 id = 2;
  string title = 3;
  repeated string options = 4;
}

message MsgUpdatePollResponse {}

message MsgDeletePoll {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePollResponse {}

message MsgCreateVote {
  string creator = 1;
  string pollID = 2;
  string option = 3;
}

message MsgCreateVoteResponse {
  uint64 id = 1;
}

message MsgUpdateVote {
  string creator = 1;
  uint64 id = 2;
  string pollID = 3;
  string option = 4;
}

message MsgUpdateVoteResponse {}

message MsgDeleteVote {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteVoteResponse {}

// this line is used by starport scaffolding # proto/tx/message
