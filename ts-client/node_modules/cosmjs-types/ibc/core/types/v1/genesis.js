"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const genesis_1 = require("../../../../ibc/core/client/v1/genesis");
const genesis_2 = require("../../../../ibc/core/connection/v1/genesis");
const genesis_3 = require("../../../../ibc/core/channel/v1/genesis");
exports.protobufPackage = "ibc.core.types.v1";
const baseGenesisState = {};
exports.GenesisState = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.clientGenesis !== undefined) {
            genesis_1.GenesisState.encode(message.clientGenesis, writer.uint32(10).fork()).ldelim();
        }
        if (message.connectionGenesis !== undefined) {
            genesis_2.GenesisState.encode(message.connectionGenesis, writer.uint32(18).fork()).ldelim();
        }
        if (message.channelGenesis !== undefined) {
            genesis_3.GenesisState.encode(message.channelGenesis, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseGenesisState);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.clientGenesis = genesis_1.GenesisState.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.connectionGenesis = genesis_2.GenesisState.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.channelGenesis = genesis_3.GenesisState.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseGenesisState);
        message.clientGenesis =
            object.clientGenesis !== undefined && object.clientGenesis !== null
                ? genesis_1.GenesisState.fromJSON(object.clientGenesis)
                : undefined;
        message.connectionGenesis =
            object.connectionGenesis !== undefined && object.connectionGenesis !== null
                ? genesis_2.GenesisState.fromJSON(object.connectionGenesis)
                : undefined;
        message.channelGenesis =
            object.channelGenesis !== undefined && object.channelGenesis !== null
                ? genesis_3.GenesisState.fromJSON(object.channelGenesis)
                : undefined;
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.clientGenesis !== undefined &&
            (obj.clientGenesis = message.clientGenesis ? genesis_1.GenesisState.toJSON(message.clientGenesis) : undefined);
        message.connectionGenesis !== undefined &&
            (obj.connectionGenesis = message.connectionGenesis
                ? genesis_2.GenesisState.toJSON(message.connectionGenesis)
                : undefined);
        message.channelGenesis !== undefined &&
            (obj.channelGenesis = message.channelGenesis
                ? genesis_3.GenesisState.toJSON(message.channelGenesis)
                : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseGenesisState);
        message.clientGenesis =
            object.clientGenesis !== undefined && object.clientGenesis !== null
                ? genesis_1.GenesisState.fromPartial(object.clientGenesis)
                : undefined;
        message.connectionGenesis =
            object.connectionGenesis !== undefined && object.connectionGenesis !== null
                ? genesis_2.GenesisState.fromPartial(object.connectionGenesis)
                : undefined;
        message.channelGenesis =
            object.channelGenesis !== undefined && object.channelGenesis !== null
                ? genesis_3.GenesisState.fromPartial(object.channelGenesis)
                : undefined;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
//# sourceMappingURL=genesis.js.map